# -*- coding: utf-8 -*-
"""Finnhub.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OWADZ0qCPIAYl34k6wMvEuq-wkUuLDOc
"""

import json
import datetime
import ssl
import websocket
ssl._create_default_https_context = ssl._create_unverified_context
from elasticsearch import Elasticsearch

es = Elasticsearch(
    cloud_id="c4857549d4d841c3b6a7f77de72b2a2e:dXMtY2VudHJhbDEuZ2NwLmNsb3VkLmVzLmlvOjQ0MyQwNjQ2OTk1ZWRhYjY0YWVjYmI2YzM3YjA1YzkzYjZmYiQyMzY4M2Y3ODJlNmI0YzJhYmI0NTM5ZGMzODRkYTEwNg==",
    http_auth=("elastic","lQnJXVKKmiv9MK11rysr5I6T")
)
def on_message(ws, message):
    message_json = json.loads(message)
    message_json["@timestamp"] = datetime.datetime.utcnow().isoformat()
    res = es.index(index="websockets-data", body=message_json)
    print(message_json)
def on_error(ws, error):
    print(error)
def on_close(ws):
    print("### closed ###")
def on_open(ws):
    ws.send('{"type":"subscribe","symbol":"AAPL"}')
    ws.send('{"type":"subscribe","symbol":"AMZN"}')
    ws.send('{"type":"subscribe","symbol":"TSLA"}')
    ws.send('{"type":"subscribe","symbol":"ESTC"}')
    ws.send('{"type":"subscribe","symbol":"BINANCE:BTCUSDT"}')
    ws.send('{"type":"subscribe","symbol":"IC MARKETS:1"}')
if __name__ == "__main__":
    websocket.enableTrace(True)
    ws = websocket.WebSocketApp("wss://ws.finnhub.io?token=cl1f4apr01qkvip7nuk0cl1f4apr01qkvip7nukg",
                              on_message = on_message,
                              on_error = on_error,
                              on_close = on_close)
    print(ssl.get_default_verify_paths())
    ws.on_open = on_open
    ws.run_forever(sslopt={"cert_reqs": ssl.CERT_NONE})

!pip install elasticsearch